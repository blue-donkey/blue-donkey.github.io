<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LaTeXify</title>
  
  <subtitle>LaTeX tutorial</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://latexify.xyz/"/>
  <updated>2018-06-03T05:13:50.249Z</updated>
  <id>http://latexify.xyz/</id>
  
  <author>
    <name>Neo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Creating a document in LaTeX</title>
    <link href="http://latexify.xyz/Creating_a_document_in_LaTeX.html"/>
    <id>http://latexify.xyz/Creating_a_document_in_LaTeX.html</id>
    <published>2018-05-28T21:35:07.849Z</published>
    <updated>2018-06-03T05:13:50.249Z</updated>
    
    <content type="html"><![CDATA[<p>LaTeX is a great tool to create documents. It’s based on the ‘WYSIWYM’ (what you see is what you mean) idea, meaning you only have to focus on the contents of your document and the computer will take care of the formatting. With LaTeX, it’s very easy to create professional-looking material. This article presents the basics of how to create a document.</p><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Let’s start with the simplest working example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line"> </span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">First document. This is a simple example, with no </span><br><span class="line">extra parameters or packages included.</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure></p><center><img src="https://cdn.sharelatex.com/learn-scripts/images/d/d5/BasicsEx1.png" alt=""></center><p>The input file is just a plain text file, with the extension <code>.tex</code>. It will contain code that the computer interprets to produce a PDF file. The first line of code declares the type of document, in this case is an <em>article</em>. Then, between the <code>\begin{document} \end{document}</code> tags you must write the text of your document.</p><blockquote><p>Note: To learn how to generate the output file see the <a href="/Compile.html">Compile</a> article.</p></blockquote><h3 id="The-preamble-of-a-document"><a href="#The-preamble-of-a-document" class="headerlink" title="The preamble of a document"></a>The preamble of a document</h3><p>In the previous example the text was entered after the <code>\begin{document}</code> command. The part of your <code>.tex</code> file before this point is called the <strong>preamble</strong>. In the preamble, you define the type of document you are writing and the language, load extra packages you will need, and set several parameters. For instance, a normal document preamble would look like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[12pt, letterpaper]&#123;article&#125;</span><br><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br><span class="line"> </span><br><span class="line">\title&#123;First document&#125;</span><br><span class="line">\author&#123;Hubert Farnsworth \thanks&#123;funded by the ShareLaTeX team&#125;&#125;</span><br><span class="line">\date&#123;February 2014&#125;</span><br></pre></td></tr></table></figure></p><p>Below a detailed description of each line:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[12pt, letterpaper]&#123;article&#125;</span><br></pre></td></tr></table></figure></p><p>As said before, this defines the type of document. Some additional parameters inside brackets and comma-separated can be passed to the command. In the example, the extra parameters set the font size (12pt) and the paper size (letterpaper). Of course other font sizes (9pt, 11pt, 12pt) can be used, the default size is 10pt. As for the paper size, other possible values are included A4 and legalpaper. Note that ShareLaTeX uses a European LaTeX distribution, which produces documents in A4 size by default. See our <a href="/Page_size_and_margins.html">Page size and margins</a> article for for information about using the <code>Geometry</code> package to set further formatting parameters.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br></pre></td></tr></table></figure></p><p>This is the encoding for the document, to allow characters beyond ASCII (e.g. à, ü, č …) to be used in the text. It can be omitted or changed to another encoding but <code>utf-8</code> is recommended. Unless you specifically need another encoding, or if you are unsure about it, add this line to the preamble.</p><p>The next three lines are self-descriptive. Anyway, you can see a description of what they actually do in the next section.</p><p>Another important parameter that can be passed to the <code>\documentclass</code> command is <code>twocolumn</code> if you want your text in a two-column format and <code>twoside</code> for two-side paper sheet printing.</p><h3 id="Displaying-the-title-of-your-document"><a href="#Displaying-the-title-of-your-document" class="headerlink" title="Displaying the title of your document"></a>Displaying the title of your document</h3><p>To display the title of your document you have to declare its components in the preamble and then use some additional code:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[12pt, letterpaper, twoside]&#123;article&#125;</span><br><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br><span class="line"> </span><br><span class="line">\title&#123;First document&#125;</span><br><span class="line">\author&#123;Hubert Farnsworth \thanks&#123;funded by the ShareLaTeX team&#125;&#125;</span><br><span class="line">\date&#123;February 2014&#125;</span><br><span class="line"> </span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line"> </span><br><span class="line">\begin&#123;titlepage&#125;</span><br><span class="line">\maketitle</span><br><span class="line">\end&#123;titlepage&#125;</span><br><span class="line"> </span><br><span class="line">In this document some extra packages and parameters</span><br><span class="line">were added. There is an encoding package</span><br><span class="line">and pagesize and fontsize parameters.</span><br><span class="line"> </span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure></p><p><center><img src="https://cdn.sharelatex.com/learn-scripts/images/0/0e/BasicsEx2.png" alt=""></center><br>There is a block with three lines in the preamble that defines the information to be included on the title page.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\title&#123;First document&#125;</span><br></pre></td></tr></table></figure></p><p>This is the title.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\author&#123;Hubert Farnsworth&#125;</span><br></pre></td></tr></table></figure></p><p>Here you put the name(s) of the author(s) and, as an optional parameter, you can add the next command:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\thanks&#123;funded by the ShareLaTeX team&#125;</span><br></pre></td></tr></table></figure></p><p>This can be added after the name of the author, inside the braces of the <code>title</code> command. It will add a superscript and a footnote with the text inside the braces. Useful if you need to thank an institution in your article.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\date&#123;February 2014&#125;</span><br></pre></td></tr></table></figure></p><p>You can enter the date manually or use the command <code>\today</code> so the date will be updated automatically at the time you compile your document.</p><p>Once you have that in the preamble now in the body of your document you can use the next commands for the information to be printed.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;titlepage&#125; \end&#123;titlepage&#125;</span><br></pre></td></tr></table></figure></p><p>This declares an <strong>environment</strong>, a block of code with a specific behaviour depending on its type. In this case whatever you include in this <em>titlepage</em> environment will appear in the first page of your document.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\maketitle</span><br></pre></td></tr></table></figure></p><p>This command will print the title, the author and the date in the format shown in the example. If it’s not enclosed in a <code>titlepage</code> environment, it will be shown at the beginning of the document, above the first line.</p><h3 id="Basic-formatting-abstract-paragraphs-and-newlines"><a href="#Basic-formatting-abstract-paragraphs-and-newlines" class="headerlink" title="Basic formatting: abstract, paragraphs and newlines"></a>Basic formatting: abstract, paragraphs and newlines</h3><p>Everything included inside the <code>\begin{document} \end{document}</code> commands will be rendered in the final document.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[12pt, letterpaper, twoside]&#123;article&#125;</span><br><span class="line">\usepackage[utf8]&#123;inputenc&#125;</span><br><span class="line"> </span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line"> </span><br><span class="line">\begin&#123;abstract&#125;</span><br><span class="line">This is a simple paragraph at the beginning of the document. A brief introduction to the main subject.</span><br><span class="line">\end&#123;abstract&#125;</span><br><span class="line"> </span><br><span class="line">In this document some extra packages and parameters</span><br><span class="line">were added. There is an encoding package,</span><br><span class="line">and pagesize and fontsize parameters.</span><br><span class="line"> </span><br><span class="line">This line will start a second paragraph. And I can</span><br><span class="line"> brake\\ the lines \\ and continue on a new line.</span><br><span class="line"> </span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><p><center><img src="https://cdn.sharelatex.com/learn-scripts/images/c/cc/BasicEx3.1.png" alt=""></center><br>In scientific documents, it’s a common practice to include a brief overview of the main subject of the paper. In LATEX, the <code>abstract</code> environment is for this purpose. The <code>abstract</code> environment will put the text in a special format at the top of your document.</p><p>When writing the contents of your document, if you need to start a new paragraph you must hit the “Enter” key twice (to insert a double blank line). Notice that paragraphs have a white space before the first line.</p><p>To start a new line without actually starting a new paragraph insert a <em>break line</em> point, this can be done by \ (a double backslash as in the example) or the <code>\newline</code> command.</p><p>You can find more information in the <a href="/Paragraphs_and_new_lines.html">Paragraphs and new lines</a> article.</p><p>For a more complete discussion about document structuring see the <a href="/Sections_and_chapters.html">article about sections and chapters</a>.</p><h3 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h3><p>Sometimes it’s necessary to add comments to your LaTeX code for readability. This is straightforward, put a <code>%</code> before the comment and LaTeX will ignore that text.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">\documentclass&#123;article&#125;</span><br><span class="line">\usepackage[utf8]&#123;inputenc&#125; %codification of the document</span><br><span class="line"> </span><br><span class="line">\usepackage&#123;comment&#125;</span><br><span class="line"> </span><br><span class="line">%Here begins the body of the document</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">This document contains a lot of comments, none of them</span><br><span class="line">will appear here, only this text.</span><br><span class="line"> </span><br><span class="line">This document contains a lot of comments, none of them</span><br><span class="line">will appear here, only this text.</span><br><span class="line"> </span><br><span class="line">\begin&#123;comment&#125;</span><br><span class="line">This text won&apos;t show up in the compiled pdf</span><br><span class="line">this is just a multi-line comment. Useful</span><br><span class="line">to, for instance, comment out slow-rendering parts</span><br><span class="line">while working on a draft.</span><br><span class="line">\end&#123;comment&#125;</span><br><span class="line"> </span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure></p><p><center><img src="https://cdn.sharelatex.com/learn-scripts/images/1/16/BasicEx4.1.png" alt=""></center><br>In the last part of the example, you can see a <code>comment</code> environment. This helps in multi-line comments instead of putting a <code>%</code> at the beginning of each line. For this to work you must add the next line to your preamble:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\usepackage&#123;comment&#125;</span><br></pre></td></tr></table></figure></p><p>The <code>%</code> symbols is a reserved character, if you actually need this symbol to be printed in your document, use <code>\%</code>. See the reference guide for a full list of reserved characters.</p><h3 id="Reference-guide"><a href="#Reference-guide" class="headerlink" title="Reference guide"></a>Reference guide</h3><h4 id="Document-types-available-in-the-documentclass-command"><a href="#Document-types-available-in-the-documentclass-command" class="headerlink" title="Document types available in the \documentclass command."></a>Document types available in the <code>\documentclass</code> command.</h4><table><thead><tr><th>Document type</th><th>Description</th></tr></thead><tbody><tr><td>article</td><td>For short documents and journal articles. Is the most commonly used.</td></tr><tr><td>report</td><td>For longer documents and dissertations.</td></tr><tr><td>book</td><td>Useful to write books.</td></tr><tr><td>letter</td><td>For letters.</td></tr><tr><td>slides</td><td>For slides, rarely used.</td></tr><tr><td>beamer</td><td>Slides in the Beamer class format. See the <a href="/Beamer.html">beamer</a> documentation for a better description.</td></tr></tbody></table><h4 id="Reserved-characters"><a href="#Reserved-characters" class="headerlink" title="Reserved characters"></a>Reserved characters</h4><p>The following symbol characters are reserved by LaTeX because they introduce a command and have a special meaning.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># $ % ^ &amp; _ &#123; &#125; ~ \</span><br></pre></td></tr></table></figure></p><p>These symbols and can be printed with special commands (in some cases - inside mathematical environment).</p><table><thead><tr><th>Character</th><th>Function</th><th>How to print it</th></tr></thead><tbody><tr><td>#</td><td>Macro parameter</td><td>\#</td></tr><tr><td>$</td><td>Math mode</td><td>\$</td></tr><tr><td>%</td><td>Comment</td><td>\%</td></tr><tr><td>^</td><td>Superscript (in math mode)</td><td>\^{} or $\textasciicircum$</td></tr><tr><td>&amp;</td><td>Separate column entries in tables</td><td>\&amp;</td></tr><tr><td>_</td><td>Subscript (in math mode)</td><td>_</td></tr><tr><td>{ }</td><td>Processing block</td><td>{ }</td></tr><tr><td>~</td><td>Unbreakable space, use it whenever you want to leave a space which is unbreakable</td><td>$\textasciitilde$ or ~{}</td></tr><tr><td>\</td><td>Starting commands, which extend until the first non-alphanumerical character</td><td>$\textbackslash$ or $\backslash$</td></tr></tbody></table><h3 id="Further-Reading"><a href="#Further-Reading" class="headerlink" title="Further Reading"></a>Further Reading</h3><ul><li><a href="/Choosing_a_LaTeX_Compiler.html" title="Choosing a LaTeX Compiler">Choosing a LaTeX Compiler</a></li><li><a href="/Paragraphs_and_new_lines.html" title="Paragraphs and new lines">Paragraphs and new lines</a></li><li><a href="/Bold,_italics_and_underlining.html" title="Bold, italics and underlining">Bold, italics and underlining</a></li><li><a href="/Lists.html" title="Lists">Lists</a></li><li><a href="/Mathematics.html" title="Mathematics">Mathematics</a></li><li><a href="/Bibliography_management_in_LaTeX.html" title="Bibliography management in LaTeX">Bibliography management in LaTeX</a></li><li><a href="/Images.html" title="Images">Images</a></li><li><a href="/Tables.html" title="Tables">Tables</a></li><li><a href="http://www.ctan.org/tex-archive/info/lshort/" target="_blank" rel="noopener">The not so short introduction to LaTeX2ε</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;LaTeX is a great tool to create documents. It’s based on the ‘WYSIWYM’ (what you see is what you mean) idea, meaning you only have to foc
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Choosing a LaTeX Compiler</title>
    <link href="http://latexify.xyz/Choosing_a_LaTeX_Compiler.html"/>
    <id>http://latexify.xyz/Choosing_a_LaTeX_Compiler.html</id>
    <published>2018-05-28T21:35:07.849Z</published>
    <updated>2018-06-03T05:12:41.332Z</updated>
    
    <content type="html"><![CDATA[<p>The styles, contents and layout in a LaTeX document are defined by means of <code>tags</code> or <code>commands</code> in a plain <code>.tex</code> file, this file can be used to generate several types of “human-readable” versions of the document. The easiest way to generate this final output is to use ShareLaTeX, ShareLaTeX has a ready-to-use LaTeX distribution and final documents can be generated by simply clicking the “Recompile” button; if this is your case you can skip this article. Otherwise, if you need to learn how to compile documents in your computer, this article describes how to generate PS, DVI and PDF output from a LaTeX file.</p><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>LaTeX documents are plain documents with a <code>.tex</code> extension (see the <a href="/Creating_a_document_in_LaTeX.html">Creating a document in LaTeX article</a> for examples), this plain text file has some markup commands that are meant to format the document but, how do you actually generate the final output?. It depends on the type of document you want to generate.</p><p>Suppose you saved your document and named the file “mydocument.tex”. To create a <code>.PDF</code> file just run this command in the system terminal.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdflatex mydocument.tex</span><br></pre></td></tr></table></figure></p><p>And a file named “mydocument.pdf” will appear.</p><h3 id="TeX-distributions"><a href="#TeX-distributions" class="headerlink" title="TeX distributions"></a>TeX distributions</h3><p>The set of programs that make possible to compile TeX and LaTeX documents is called a TeX typesetting or a TeX distribution. There are many TeX distributions available for different operating systems:</p><ul><li><strong>MiKTeX</strong> for Windows</li><li><strong>TeX Live</strong> for Linux and other UNIX-like systems</li><li><strong>MacTeX</strong> redistribution of TeX Live for Mac OS X</li><li><strong>teTeX</strong> for Linux and other UNIX-like systems, now is no longer actively maintained</li><li><strong>proTeXt</strong> is based on MiKTeX</li></ul><p>Of course, if you don’t want to go through the process of installing a TeX distribution, you can use an on-line ready to use option like ShareLaTeX.</p><h3 id="LaTeX-editors"><a href="#LaTeX-editors" class="headerlink" title="LaTeX editors"></a>LaTeX editors</h3><p>There are many advanced text editors specifically dedicated to LaTeX for the most popular operating systems, some of them can be downloaded for free while others are proprietary software:</p><ul><li>Open source: AUCTEX, GNU TeXmacs, Gummi, Kile, LaTeXila, MeWa, TeXShop, TeXnicCenter, Texmaker, TeXstudio, TeXworks</li><li>Freeware: LEd, WinShell</li><li>Proprietary/Shareware: Inlage, Scientific WorkPlace, WinEdt</li></ul><p>There are also general-purpose editors that add LaTeX-friendly options by means of plugins. For example the well known editors emacs and vim (also sublime text, atom) have both a LaTeX extension.</p><p>It’s worth to mention that the editor in ShareLaTeX can be customized to emulate the emacs or vim behaviour. It is also <em>themeable</em>, so you can choose the same syntax highlighting of some of the aforementioned editors.</p><h3 id="Output-formats"><a href="#Output-formats" class="headerlink" title="Output formats"></a>Output formats</h3><p>There are three output formats available in all TeX distributions. To generate a specific output the document has to be compiled by running a command in a <code>terminal</code> (linux and osx) or the <code>command prompt</code> (windows).</p><p>For example, if you want to compile a file named “mydocument.tex” you can use one of the next commands:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">latex mydocument.tex</span><br></pre></td></tr></table></figure></p><p>This will create “mydocument.dvi”, a DVI document.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pdflatex mydocument.tex</span><br></pre></td></tr></table></figure></p><p>This will generate “mydocument.pdf”, a PDF document.</p><p>There are some additional commands that allow conversion between formats, PS images are also supported. See the reference guide for a schematic description of commands and output formats.</p><p>A description of each output format is provided below:</p><ul><li>(<strong>DVI</strong>) Device independent file format consists of binary data describing the visual layout of a document in a manner not reliant on any specific image format, display hardware or printer.</li><li>(<strong>PS</strong>) PostScript file format describes text and graphics on page and it is based on vector graphics. PostScript is, until now, a standard in desktop publishing areas.</li><li>(<strong>PDF</strong>) Portable Document Format is a file format, based on PostScript, used to represent documents in a manner independent of application software, hardware, and operating systems. It is now widely used as a file format for printing and for distribution on the Web.</li></ul><blockquote><p>Note: Most of the editors nowadays include quick-access icons to compile to different output formats so you don’t have to actually run the commands in a system prompt.</p></blockquote><h3 id="Compiling-documents-with-cross-references"><a href="#Compiling-documents-with-cross-references" class="headerlink" title="Compiling documents with cross-references"></a>Compiling documents with cross-references</h3><p>In some cases, when your document includes cross-references, you must compile the source twice. It is necessary to include the correct numbers in the table of contents, list of images, reference numbers to theorems and so on.</p><p>During the first compilation the LaTeX compiler writes the .aux file for informations about different numbering and during the second one the compiler reads these informations in order to properly generate a table of contents, bibliography, etc.</p><p>This process can be automatized by the command <code>latexmk</code>. For example, to create a pdf out of the “mydocument.tex” file, run<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">latexmk -pdf mydocument.tex</span><br></pre></td></tr></table></figure></p><p>only once, even if the document has referenced images and bibliography. You can change <code>-pdf</code> to <code>-dvi</code> to set a different file type.</p><h3 id="Reference-guide"><a href="#Reference-guide" class="headerlink" title="Reference guide"></a>Reference guide</h3><p><strong>LaTeX compilation file flow</strong></p><center><img src="https://cdn.sharelatex.com/learn-scripts/images/e/ea/Latex-file-flow.png" alt=""></center><h3 id="Further-Reading"><a href="#Further-Reading" class="headerlink" title="Further Reading"></a>Further Reading</h3><ul><li><a href="/Creating_a_document_in_LaTeX.html" title="Creating a document in LaTeX">Creating a document in LaTeX</a></li><li><a href="/Creating_a_document_in_ShareLaTeX.html" title="Creating a document in ShareLaTeX">Creating a document in ShareLaTeX</a></li><li><a href="/Debugging_Compilation_timeout_errors.html" title="Debugging Compilation timeout errors">Debugging Compilation timeout errors</a></li><li><a href="/Multi-file_LaTeX_projects.html" title="Multi-file LaTeX projects">Multi-file LaTeX projects</a></li><li><a href="http://www.ctan.org/tex-archive/info/lshort/" target="_blank" rel="noopener">The not so short introduction to LaTeX2ε</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The styles, contents and layout in a LaTeX document are defined by means of &lt;code&gt;tags&lt;/code&gt; or &lt;code&gt;commands&lt;/code&gt; in a plain &lt;code&gt;.
      
    
    </summary>
    
    
  </entry>
  
</feed>
