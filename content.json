{"meta":{"title":"LaTeXify","subtitle":"LaTeX tutorial","description":null,"author":"Neo","url":"http://latexify.xyz"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2018-06-03T02:07:11.303Z","updated":"2018-05-28T22:17:43.545Z","comments":false,"path":"/404.html","permalink":"http://latexify.xyz//404.html","excerpt":"","text":""},{"title":"关于","date":"2018-06-03T02:07:11.316Z","updated":"2018-05-28T22:17:43.545Z","comments":false,"path":"about/index.html","permalink":"http://latexify.xyz/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"友情链接","date":"2018-06-03T02:07:11.368Z","updated":"2018-05-28T22:17:43.546Z","comments":true,"path":"links/index.html","permalink":"http://latexify.xyz/links/index.html","excerpt":"","text":""},{"title":"Catefories","date":"2018-06-03T06:42:56.017Z","updated":"2018-06-03T06:42:56.017Z","comments":false,"path":"categories/index.html","permalink":"http://latexify.xyz/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-06-03T06:43:34.788Z","updated":"2018-06-03T06:43:34.788Z","comments":false,"path":"tags/index.html","permalink":"http://latexify.xyz/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Lists","slug":"Lists","date":"2018-05-04T22:00:00.000Z","updated":"2018-06-09T11:27:01.326Z","comments":true,"path":"Lists.html","link":"","permalink":"http://latexify.xyz/Lists.html","excerpt":"","text":"List are basic elements in a document, when used correctly they keep concepts organized and structured. This article explains how to create and modify numbered and unnumbered lists in LaTeX. IntroductionLists are actually very simple to create.123456List are really easy to create \\begin&#123;itemize&#125; \\item One entry in the list \\item Another entry in the list\\end&#123;itemize&#125; To create a (unordered) list you have to declare the itemize environment and then put the entries inside.### Unordered listsThe unordered (unnumbered) lists are produced by the itemize environment. Each entry must be preceded by the control sequence \\item.1234\\begin&#123;itemize&#125; \\item The individual entries are indicated with a black dot, a so-called bullet. \\item The text in the entries may be of any length.\\end&#123;itemize&#125;By default the individual entries are indicated with a black dot, so-called bullet. The text in the entries may be of any length.### Ordered listsOrdered list have the same syntax inside a different environment:1234\\begin&#123;enumerate&#125; \\item The labels consists of sequential numbers. \\item The numbers starts at 1 with every call to the enumerate environment.\\end&#123;enumerate&#125;The ordered lists are generated by a \\enumerate environment and each entry must be preceded by the control sequence \\item, which will automatically generate the number labelling the item. The enumerate labels consists of sequential numbers, these numbers starts at 1 with every call to the enumerate environment.### Nested ListsIn LaTeX you can insert a list inside another list. The above lists may be included within one another, either mixed or of one type, to a depth of four levels.12345678\\begin&#123;enumerate&#125; \\item The labels consists of sequential numbers. \\begin&#123;itemize&#125; \\item The individual entries are indicated with a black dot, a so-called bullet. \\item The text in the entries may be of any length. \\end&#123;itemize&#125; \\item The numbers starts at 1 with every call to the enumerate environment.\\end&#123;enumerate&#125; List stylesAs many other LaTeX elements, unordered and ordered list styles can be personalized. Ordered listsThe numbering styles change depending on the depth of the nested lists:12345678910111213141516\\begin&#123;enumerate&#125; \\item First level item \\item First level item \\begin&#123;enumerate&#125; \\item Second level item \\item Second level item \\begin&#123;enumerate&#125; \\item Third level item \\item Third level item \\begin&#123;enumerate&#125; \\item Fourth level item \\item Fourth level item \\end&#123;enumerate&#125; \\end&#123;enumerate&#125; \\end&#123;enumerate&#125;\\end&#123;enumerate&#125; The default numbering scheme is: Arabic number (1, 2, 3, …) for Level 1 Lowercase letter (a, b, c, …) for Level 2 Lowercase Roman numeral (i, ii, iii, …) for Level 3 Uppercase letter (A, B, C, …) for Level 4. These numbers can be changed by redefining the commands that typeset the numbers of various list levels. For example:1234567891011121314151617\\renewcommand&#123;\\labelenumii&#125;&#123;\\Roman&#123;enumii&#125;&#125;\\begin&#123;enumerate&#125; \\item First level item \\item First level item \\begin&#123;enumerate&#125; \\item Second level item \\item Second level item \\begin&#123;enumerate&#125; \\item Third level item \\item Third level item \\begin&#123;enumerate&#125; \\item Fourth level item \\item Fourth level item \\end&#123;enumerate&#125; \\end&#123;enumerate&#125;\\end&#123;enumerate&#125;\\end&#123;enumerate&#125; The command \\renewcommand{\\labelenumii}{\\Roman{enumii}} changes the second level to upper case Roman numeral. It is possible to change the labels of any level, replace labelenumii for one of the listed below. \\theenumi for Level 1 \\theenumii for Level 2 \\theenumiii for Level 3 \\theenumiv for Level 4 The command must be placed in the preamble to change the labels globally or right before \\begin{enumerate} to change labels only in this list. There are some other styles, see the reference guide for a complete list. In numbered lists the counter is incremented by \\item before it is printed, and starts from 1,a,i,A,I. This can be changed:123456789101112131415161718\\renewcommand&#123;\\labelenumii&#125;&#123;\\Roman&#123;enumii&#125;&#125;\\begin&#123;enumerate&#125; \\item First level item \\item First level item \\begin&#123;enumerate&#125; \\setcounter&#123;enumii&#125;&#123;4&#125; \\item Second level item \\item Second level item \\begin&#123;enumerate&#125; \\item Third level item \\item Third level item \\begin&#123;enumerate&#125; \\item Fourth level item \\item Fourth level item \\end&#123;enumerate&#125; \\end&#123;enumerate&#125; \\end&#123;enumerate&#125;\\end&#123;enumerate&#125; To change the start number or letter you must use the \\setcounter command. In the example, to change the start number of level 2 to V the command \\setcounter{enumii}{4} was used. To set the start number to any other counter change enumii for any of these: enumi for Level 1 enumii for Level 2 enumiii for Level 3 enumiv for Level 4 Unordered listsThe label scheme of unordered lists also changes depending on the depth of the nested list:123456789101112\\begin&#123;itemize&#125; \\item First Level \\begin&#123;itemize&#125; \\item Second Level \\begin&#123;itemize&#125; \\item Third Level \\begin&#123;itemize&#125; \\item Fourth Level \\end&#123;itemize&#125; \\end&#123;itemize&#125; \\end&#123;itemize&#125;\\end&#123;itemize&#125; The default label scheme for itemized lists is: Level 1 is \\textbullet (•), Level 2 is \\textendash (–) , Level 3 is \\textasteriskcentered (*) Level 4 is \\textperiodcentered (·). These labels can be changed by redefining the commands that typeset them for various list levels. For example, to change Level 1 to black square and Level 2 to white square we’ll use :1234567891011121314\\renewcommand&#123;\\labelitemi&#125;&#123;$\\blacksquare$&#125;\\renewcommand\\labelitemii&#123;$\\square$&#125;\\begin&#123;itemize&#125; \\item First Level \\begin&#123;itemize&#125; \\item Second Level \\begin&#123;itemize&#125; \\item Third Level \\begin&#123;itemize&#125; \\item Fourth Level \\end&#123;itemize&#125; \\end&#123;itemize&#125; \\end&#123;itemize&#125;\\end&#123;itemize&#125; The mathematical symbols used in the previous example belong to the amssymb package, so you have to add \\usepackage{amssymb} to your preamble. To redefine the label use one of the next commands, depending on the level of list mark you intend to change: labelitemi for Level 1 labelitemii for Level 2 labelitemiii for Level 3 labelitemiv for Level 4 You can also change the item label for a specific entry, for example:12345\\begin&#123;itemize&#125; \\item Default item label for entry one \\item Default item label for entry two \\item[$\\square$] Custom item label for entry three\\end&#123;itemize&#125; All you have to do is pass the desired mark as a parameter inside brackets to the item line. Reference guideAvailable styles for numbered lists: Code Description \\alph Lowercase letter (a, b, c, …) \\Alph Uppercase letter (A, B, C, …) \\arabic Arabic number (1, 2, 3, …) \\roman Lowercase Roman numeral (i, ii, iii, …) \\Roman Uppercase Roman numeral (I, II, III, …) Further Reading Creating a document in LaTeX Bold, italics and underlining Paragraphs and new lines List of Greek letters and math symbols The Great, Big list of LaTeX Symbols (a full list of available mathematical symbols in the amssymb package) The not so short introduction to LaTeX2ε","categories":[{"name":"LaTeX Tutorial","slug":"LaTeX-Tutorial","permalink":"http://latexify.xyz/categories/LaTeX-Tutorial/"}],"tags":[{"name":"Basics","slug":"Basics","permalink":"http://latexify.xyz/tags/Basics/"}]},{"title":"Bold, italics and underlining","slug":"Bold,_italics_and_underlining","date":"2018-05-03T22:00:00.000Z","updated":"2018-06-09T10:47:40.768Z","comments":true,"path":"Bold,_italics_and_underlining.html","link":"","permalink":"http://latexify.xyz/Bold,_italics_and_underlining.html","excerpt":"","text":"Simple text formatting helps to highlight important concepts within a document and make it more readable. Using italics, bold or underlined words can change the perception of the reader. IntroductionIn this article three basic text formatting tools will be explained: italics, bold and underline. Let’s begin with an example:123Some of the \\textbf&#123;greatest&#125; discoveries in \\underline&#123;science&#125; were made by \\textbf&#123;\\textit&#123;accident&#125;&#125;. As you can see, there are three basic commands and they can be nested to get combined effects. Note: The commands \\it and \\bf also work to italicize and boldface text, but it’s not recommended to use them since they don’t preserve previous styles. With these you can’t, for instance, italicize and make a text bold at the same time. Italicized textTo make a text italic is straightforward, use the \\textit command:123Some of the greatest discoveries in science were made by \\textit&#123;accident&#125;. Bold textTo make a text bold use \\textbf command:123Some of the \\textbf&#123;greatest&#125; discoveries in science were made by accident. Underlined textUnderlining text is very simple too, use the \\underline command:123Some of the greatest discoveries in \\underline&#123;science&#125; were made by accident. Emphasising textText can be emphasized by using \\emph command. Sometimes the \\emph command behaves just as \\textit, but is not exactly the same:1234567891011Some of the greatest \\emph&#123;discoveries&#125; in science were made by accident. \\textit&#123;Some of the greatest \\emph&#123;discoveries&#125; in science were made by accident.&#125; \\textbf&#123;Some of the greatest \\emph&#123;discoveries&#125; in science were made by accident.&#125; What the \\emph command actually does with its argument depends on the context - inside normal text the emphasized text is italicized, but this behaviour is reversed if used inside an italicized text – see example above: Moreover, some packages, e.g. Beamer, change the behaviour of \\emph command. Further Reading Paragraphs and new lines Lists Paragraph formatting Line breaks and blank spaces The not so short introduction to LaTeX2ε","categories":[{"name":"LaTeX Tutorial","slug":"LaTeX-Tutorial","permalink":"http://latexify.xyz/categories/LaTeX-Tutorial/"}],"tags":[{"name":"Basics","slug":"Basics","permalink":"http://latexify.xyz/tags/Basics/"}]},{"title":"Paragraphs and new lines","slug":"Paragraphs_and_new_lines","date":"2018-05-02T22:00:00.000Z","updated":"2018-06-03T07:48:23.828Z","comments":true,"path":"Paragraphs_and_new_lines.html","link":"","permalink":"http://latexify.xyz/Paragraphs_and_new_lines.html","excerpt":"","text":"Even though the default formatting in LaTeX is fine, sometimes we need to change some elements. In this article is explained how to format paragraphs, change the text alignment and insert blank spaces. IntroductionLet’s start with an example:1234567891011\\begin&#123;center&#125;Example 1: The following paragraph (given in quotes) is an example of Center Alignment using the center environment. ``LaTeX is a document preparation system and document markup language. LaTeX uses the TeX typesetting program for formatting its output, and is itself written in the TeX macro language. LaTeX is not the name of a particular editing program, but refers to the encoding or tagging conventions that are used in LaTeX documents\".\\end&#123;center&#125; This two paragraphs are written inside a center environment, which causes them to be centred. Notice that to start a new paragraph you have to insert a blank line in between them. This is quite natural, but not the only way declare a new paragraph. New ParagraphTo start a new paragraph in LaTeX, as said before, you must leave a blank line in between. There’s another way to start a new paragraph, look at the following code snippet.1234This is the text in first paragraph. This is the text in first paragraph. This is the text in first paragraph. \\parThis is the text in second paragraph. This is the text in second paragraph. This is the text in second paragraph. As you can see, the \\par command also starts a new paragraph. By default, the paragraphs are indented by 1.5 times the point size of the current font. Also, there is no extra blank space inserted between the paragraphs. In the sections below is described how to change that. Paragraph Alignment (Text Justification)Paragraphs in LaTeX are fully justified, i.e. flush with both the left and right margins. If you would like to change the justification of a paragraph, LaTeX has the following three environments: center, flushleft and flushright (see an example of center at the introduction).1234567\\begin&#123;flushleft&#125;``LaTeX is a document preparation system and document markup language. LaTeX uses the TeX typesetting program for formatting its output, and is itself written in the TeX macro language. LaTeX is not the name of a particular editing program, but refers to the encoding or tagging conventions that are used in LaTeX documents\".\\end&#123;flushleft&#125; The flushleft environment left-justifies the paragraph. To right-justify use flushright instead. The aforementioned environments are based upon the switch commands: \\raggedright (equivalent to flushleft), \\raggedleft (equivalent to flushright) and centering (equivalent to center). A switch command switches the alignment from the point where it’s inserted down to the end of the document, unless another switch command is inserted. For more detailed information and examples on text alignment see the article Text alignment. Paragraph IndentationBy default, LaTeX does not indent the first paragraph of a section. The size of the subsequent paragraph indents is determined by the parameter \\parindent.123456\\setlength&#123;\\parindent&#125;&#123;10ex&#125;This is the text in first paragraph. This is the text in first paragraph. This is the text in first paragraph. \\par\\noindent %The next paragraph is not indentedThis is the text in second paragraph. This is the text in second paragraph. This is the text in second paragraph. The default length of this parameter is set by the document class used. It is possible to change the indent size of the paragraph by using the command \\setlength. In the example the paragraphs below \\setlength{\\parindent}{10ex} will be indented 10ex (an “ex” equals the lenght of the “x” in the current font) If you want to create a non-indented paragraph, like the second one in the example, you can use the command \\noindent at the beginning of the paragraph. If you want to indent a paragraph that is not indented you can use \\indent above it. It should be noted that this command will only have an effect when \\parindent is not set to zero. Detailed information and further examples can be found at Paragraph formatting. Further Reading Lengths in LaTeX Paragraph formatting Line breaks and blank spaces Text alignment Lists Bold, italics and underlining The not so short introduction to LaTeX2ε","categories":[{"name":"LaTeX Tutorial","slug":"LaTeX-Tutorial","permalink":"http://latexify.xyz/categories/LaTeX-Tutorial/"}],"tags":[{"name":"Basics","slug":"Basics","permalink":"http://latexify.xyz/tags/Basics/"}]},{"title":"Choosing a LaTeX Compiler","slug":"Choosing_a_LaTeX_Compiler","date":"2018-05-01T22:00:00.000Z","updated":"2018-06-03T07:37:37.965Z","comments":true,"path":"Choosing_a_LaTeX_Compiler.html","link":"","permalink":"http://latexify.xyz/Choosing_a_LaTeX_Compiler.html","excerpt":"","text":"The styles, contents and layout in a LaTeX document are defined by means of tags or commands in a plain .tex file, this file can be used to generate several types of “human-readable” versions of the document. The easiest way to generate this final output is to use ShareLaTeX, ShareLaTeX has a ready-to-use LaTeX distribution and final documents can be generated by simply clicking the “Recompile” button; if this is your case you can skip this article. Otherwise, if you need to learn how to compile documents in your computer, this article describes how to generate PS, DVI and PDF output from a LaTeX file. IntroductionLaTeX documents are plain documents with a .tex extension (see the Creating a document in LaTeX article for examples), this plain text file has some markup commands that are meant to format the document but, how do you actually generate the final output?. It depends on the type of document you want to generate. Suppose you saved your document and named the file “mydocument.tex”. To create a .PDF file just run this command in the system terminal.1pdflatex mydocument.tex And a file named “mydocument.pdf” will appear. TeX distributionsThe set of programs that make possible to compile TeX and LaTeX documents is called a TeX typesetting or a TeX distribution. There are many TeX distributions available for different operating systems: MiKTeX for Windows TeX Live for Linux and other UNIX-like systems MacTeX redistribution of TeX Live for Mac OS X teTeX for Linux and other UNIX-like systems, now is no longer actively maintained proTeXt is based on MiKTeX Of course, if you don’t want to go through the process of installing a TeX distribution, you can use an on-line ready to use option like ShareLaTeX. LaTeX editorsThere are many advanced text editors specifically dedicated to LaTeX for the most popular operating systems, some of them can be downloaded for free while others are proprietary software: Open source: AUCTEX, GNU TeXmacs, Gummi, Kile, LaTeXila, MeWa, TeXShop, TeXnicCenter, Texmaker, TeXstudio, TeXworks Freeware: LEd, WinShell Proprietary/Shareware: Inlage, Scientific WorkPlace, WinEdt There are also general-purpose editors that add LaTeX-friendly options by means of plugins. For example the well known editors emacs and vim (also sublime text, atom) have both a LaTeX extension. It’s worth to mention that the editor in ShareLaTeX can be customized to emulate the emacs or vim behaviour. It is also themeable, so you can choose the same syntax highlighting of some of the aforementioned editors. Output formatsThere are three output formats available in all TeX distributions. To generate a specific output the document has to be compiled by running a command in a terminal (linux and osx) or the command prompt (windows). For example, if you want to compile a file named “mydocument.tex” you can use one of the next commands:1latex mydocument.tex This will create “mydocument.dvi”, a DVI document.1pdflatex mydocument.tex This will generate “mydocument.pdf”, a PDF document. There are some additional commands that allow conversion between formats, PS images are also supported. See the reference guide for a schematic description of commands and output formats. A description of each output format is provided below: (DVI) Device independent file format consists of binary data describing the visual layout of a document in a manner not reliant on any specific image format, display hardware or printer. (PS) PostScript file format describes text and graphics on page and it is based on vector graphics. PostScript is, until now, a standard in desktop publishing areas. (PDF) Portable Document Format is a file format, based on PostScript, used to represent documents in a manner independent of application software, hardware, and operating systems. It is now widely used as a file format for printing and for distribution on the Web. Note: Most of the editors nowadays include quick-access icons to compile to different output formats so you don’t have to actually run the commands in a system prompt. Compiling documents with cross-referencesIn some cases, when your document includes cross-references, you must compile the source twice. It is necessary to include the correct numbers in the table of contents, list of images, reference numbers to theorems and so on. During the first compilation the LaTeX compiler writes the .aux file for informations about different numbering and during the second one the compiler reads these informations in order to properly generate a table of contents, bibliography, etc. This process can be automatized by the command latexmk. For example, to create a pdf out of the “mydocument.tex” file, run1latexmk -pdf mydocument.tex only once, even if the document has referenced images and bibliography. You can change -pdf to -dvi to set a different file type. Reference guideLaTeX compilation file flow Further Reading Creating a document in LaTeX Creating a document in ShareLaTeX Debugging Compilation timeout errors Multi-file LaTeX projects The not so short introduction to LaTeX2ε","categories":[{"name":"LaTeX Tutorial","slug":"LaTeX-Tutorial","permalink":"http://latexify.xyz/categories/LaTeX-Tutorial/"}],"tags":[{"name":"Complier","slug":"Complier","permalink":"http://latexify.xyz/tags/Complier/"}]},{"title":"Creating a document in LaTeX","slug":"Creating_a_document_in_LaTeX","date":"2018-04-30T22:00:00.000Z","updated":"2018-06-03T07:37:25.263Z","comments":true,"path":"Creating_a_document_in_LaTeX.html","link":"","permalink":"http://latexify.xyz/Creating_a_document_in_LaTeX.html","excerpt":"","text":"LaTeX is a great tool to create documents. It’s based on the ‘WYSIWYM’ (what you see is what you mean) idea, meaning you only have to focus on the contents of your document and the computer will take care of the formatting. With LaTeX, it’s very easy to create professional-looking material. This article presents the basics of how to create a document. IntroductionLet’s start with the simplest working example:123456\\documentclass&#123;article&#125; \\begin&#123;document&#125;First document. This is a simple example, with no extra parameters or packages included.\\end&#123;document&#125; The input file is just a plain text file, with the extension .tex. It will contain code that the computer interprets to produce a PDF file. The first line of code declares the type of document, in this case is an article. Then, between the \\begin{document} \\end{document} tags you must write the text of your document. Note: To learn how to generate the output file see the Compile article. The preamble of a documentIn the previous example the text was entered after the \\begin{document} command. The part of your .tex file before this point is called the preamble. In the preamble, you define the type of document you are writing and the language, load extra packages you will need, and set several parameters. For instance, a normal document preamble would look like this:123456\\documentclass[12pt, letterpaper]&#123;article&#125;\\usepackage[utf8]&#123;inputenc&#125; \\title&#123;First document&#125;\\author&#123;Hubert Farnsworth \\thanks&#123;funded by the ShareLaTeX team&#125;&#125;\\date&#123;February 2014&#125; Below a detailed description of each line:1\\documentclass[12pt, letterpaper]&#123;article&#125; As said before, this defines the type of document. Some additional parameters inside brackets and comma-separated can be passed to the command. In the example, the extra parameters set the font size (12pt) and the paper size (letterpaper). Of course other font sizes (9pt, 11pt, 12pt) can be used, the default size is 10pt. As for the paper size, other possible values are included A4 and legalpaper. Note that ShareLaTeX uses a European LaTeX distribution, which produces documents in A4 size by default. See our Page size and margins article for for information about using the Geometry package to set further formatting parameters.1\\usepackage[utf8]&#123;inputenc&#125; This is the encoding for the document, to allow characters beyond ASCII (e.g. à, ü, č …) to be used in the text. It can be omitted or changed to another encoding but utf-8 is recommended. Unless you specifically need another encoding, or if you are unsure about it, add this line to the preamble. The next three lines are self-descriptive. Anyway, you can see a description of what they actually do in the next section. Another important parameter that can be passed to the \\documentclass command is twocolumn if you want your text in a two-column format and twoside for two-side paper sheet printing. Displaying the title of your documentTo display the title of your document you have to declare its components in the preamble and then use some additional code:123456789101112131415161718\\documentclass[12pt, letterpaper, twoside]&#123;article&#125;\\usepackage[utf8]&#123;inputenc&#125; \\title&#123;First document&#125;\\author&#123;Hubert Farnsworth \\thanks&#123;funded by the ShareLaTeX team&#125;&#125;\\date&#123;February 2014&#125; \\begin&#123;document&#125; \\begin&#123;titlepage&#125;\\maketitle\\end&#123;titlepage&#125; In this document some extra packages and parameterswere added. There is an encoding packageand pagesize and fontsize parameters. \\end&#123;document&#125; There is a block with three lines in the preamble that defines the information to be included on the title page.1\\title&#123;First document&#125; This is the title.1\\author&#123;Hubert Farnsworth&#125; Here you put the name(s) of the author(s) and, as an optional parameter, you can add the next command:1\\thanks&#123;funded by the ShareLaTeX team&#125; This can be added after the name of the author, inside the braces of the title command. It will add a superscript and a footnote with the text inside the braces. Useful if you need to thank an institution in your article.1\\date&#123;February 2014&#125; You can enter the date manually or use the command \\today so the date will be updated automatically at the time you compile your document. Once you have that in the preamble now in the body of your document you can use the next commands for the information to be printed.1\\begin&#123;titlepage&#125; \\end&#123;titlepage&#125; This declares an environment, a block of code with a specific behaviour depending on its type. In this case whatever you include in this titlepage environment will appear in the first page of your document.1\\maketitle This command will print the title, the author and the date in the format shown in the example. If it’s not enclosed in a titlepage environment, it will be shown at the beginning of the document, above the first line. Basic formatting: abstract, paragraphs and newlinesEverything included inside the \\begin{document} \\end{document} commands will be rendered in the final document. 1234567891011121314151617\\documentclass[12pt, letterpaper, twoside]&#123;article&#125;\\usepackage[utf8]&#123;inputenc&#125; \\begin&#123;document&#125; \\begin&#123;abstract&#125;This is a simple paragraph at the beginning of the document. A brief introduction to the main subject.\\end&#123;abstract&#125; In this document some extra packages and parameterswere added. There is an encoding package,and pagesize and fontsize parameters. This line will start a second paragraph. And I can brake\\\\ the lines \\\\ and continue on a new line. \\end&#123;document&#125; In scientific documents, it’s a common practice to include a brief overview of the main subject of the paper. In LATEX, the abstract environment is for this purpose. The abstract environment will put the text in a special format at the top of your document. When writing the contents of your document, if you need to start a new paragraph you must hit the “Enter” key twice (to insert a double blank line). Notice that paragraphs have a white space before the first line. To start a new line without actually starting a new paragraph insert a break line point, this can be done by \\ (a double backslash as in the example) or the \\newline command. You can find more information in the Paragraphs and new lines article. For a more complete discussion about document structuring see the article about sections and chapters. CommentsSometimes it’s necessary to add comments to your LaTeX code for readability. This is straightforward, put a % before the comment and LaTeX will ignore that text.123456789101112131415161718192021\\documentclass&#123;article&#125;\\usepackage[utf8]&#123;inputenc&#125; %codification of the document \\usepackage&#123;comment&#125; %Here begins the body of the document\\begin&#123;document&#125;This document contains a lot of comments, none of themwill appear here, only this text. This document contains a lot of comments, none of themwill appear here, only this text. \\begin&#123;comment&#125;This text won't show up in the compiled pdfthis is just a multi-line comment. Usefulto, for instance, comment out slow-rendering partswhile working on a draft.\\end&#123;comment&#125; \\end&#123;document&#125; In the last part of the example, you can see a comment environment. This helps in multi-line comments instead of putting a % at the beginning of each line. For this to work you must add the next line to your preamble:1\\usepackage&#123;comment&#125; The % symbols is a reserved character, if you actually need this symbol to be printed in your document, use \\%. See the reference guide for a full list of reserved characters. Reference guideDocument types available in the \\documentclass command. Document type Description article For short documents and journal articles. Is the most commonly used. report For longer documents and dissertations. book Useful to write books. letter For letters. slides For slides, rarely used. beamer Slides in the Beamer class format. See the beamer documentation for a better description. Reserved charactersThe following symbol characters are reserved by LaTeX because they introduce a command and have a special meaning.1# $ % ^ &amp; _ &#123; &#125; ~ \\ These symbols and can be printed with special commands (in some cases - inside mathematical environment). Character Function How to print it # Macro parameter \\# $ Math mode \\$ % Comment \\% ^ Superscript (in math mode) \\^{} or $\\textasciicircum$ &amp; Separate column entries in tables \\&amp; _ Subscript (in math mode) _ { } Processing block { } ~ Unbreakable space, use it whenever you want to leave a space which is unbreakable $\\textasciitilde$ or ~{} \\ Starting commands, which extend until the first non-alphanumerical character $\\textbackslash$ or $\\backslash$ Further Reading Choosing a LaTeX Compiler Paragraphs and new lines Bold, italics and underlining Lists Mathematics Bibliography management in LaTeX Images Tables The not so short introduction to LaTeX2ε","categories":[{"name":"LaTeX Tutorial","slug":"LaTeX-Tutorial","permalink":"http://latexify.xyz/categories/LaTeX-Tutorial/"}],"tags":[{"name":"Basics","slug":"Basics","permalink":"http://latexify.xyz/tags/Basics/"}]}]}